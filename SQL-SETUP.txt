CREATE DATABASE IF NOT EXISTS main;
USE main;

-- Ensure `student_info` table exists
CREATE TABLE IF NOT EXISTS student_info (
    application_id VARCHAR(255) NOT NULL PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    is_temp TINYINT(1) DEFAULT 1,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    email VARCHAR(255),
    phone VARCHAR(20),
    address VARCHAR(250),
    city VARCHAR(255),
    province VARCHAR(255),
    zip VARCHAR(10),
    birthdate DATE,
    gender ENUM('Male', 'Female'),
    civil_status ENUM('Single', 'Married', 'Divorced', 'Widowed'),
    last_school_attended VARCHAR(255),
    school_address VARCHAR(255),
    year_graduated YEAR,
    track_strand VARCHAR(100),
    general_average DECIMAL(5,2),
    first_choice VARCHAR(200),
    second_choice VARCHAR(200),
    third_choice VARCHAR(200),
    emergency_contact_name VARCHAR(255),
    emergency_contact_relationship VARCHAR(100),
    emergency_contact_number VARCHAR(20)
);

-- Ensure `doc_uploaded` table exists
CREATE TABLE IF NOT EXISTS doc_uploaded (
    doc_id INT AUTO_INCREMENT PRIMARY KEY,
    application_id VARCHAR(255) NOT NULL,
    doc_name VARCHAR(255) NOT NULL,
    doc_type VARCHAR(100),
    file_path VARCHAR(500),
    CONSTRAINT fk_application FOREIGN KEY (application_id) REFERENCES student_info(application_id) ON DELETE CASCADE
);

-- Step 3: Insert `test` data only if it doesnâ€™t exist
INSERT INTO student_info (application_id, password)
SELECT 'test', 'test'
WHERE NOT EXISTS (
    SELECT 1 FROM student_info WHERE application_id = 'test'
);